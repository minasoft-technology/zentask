name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[run ci]')

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
    
    - name: Install dependencies
      run: go mod download

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

    - name: Run Tests with Coverage
      run: |
        go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
        # Fail if coverage is below threshold
        COVERAGE=$(go tool cover -func=coverage.txt | grep total | awk '{print substr($3, 1, length($3)-1)}')
        THRESHOLD=70
        if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
          echo "Test coverage ($COVERAGE%) is below threshold ($THRESHOLD%)"
          exit 1
        fi

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt
        flags: unittests
        fail_ci_if_error: true
